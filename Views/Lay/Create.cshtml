@model CutUsage.Models.LayMaster
@using System.Linq

@{
    ViewData["Title"] = "Create Lay";

    // safe casts with fallback
    var styles = ViewData["Styles"] as IEnumerable<StyleM> ?? Enumerable.Empty<StyleM>();
    var markers = ViewData["Markers"] as IEnumerable<Marker> ?? Enumerable.Empty<Marker>();
    var types = ViewData["Types"] as IEnumerable<LayType> ?? Enumerable.Empty<LayType>();
    var tables = ViewData["Tables"] as IEnumerable<LayTable> ?? Enumerable.Empty<LayTable>();
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()

    <!-- Style dropdown -->
    <div class="form-group">
        <label for="Style">Style</label>
        <div class="form-group">
            <input asp-for="Style"
                   class="form-control"
                   list="stylesList"
                   autocomplete="off"
                   placeholder="Type to search…" />
            <datalist id="stylesList">
                @foreach (var m in (IEnumerable<StyleM>)ViewData["Styles"])
                {
                    <option value="@m.Style"></option>
                }
            </datalist>
        </div>
        <span asp-validation-for="Style" class="text-danger"></span>
    </div>

    <!-- Marker dropdown -->
    <div class="form-group">
        <label for="MarkerId">Marker</label>
        <input asp-for="MarkerId"
               class="form-control"
               list="markersList"
               autocomplete="off"
               placeholder="Type to search…" />
        <datalist id="markersList">
            @foreach (var m in (IEnumerable<Marker>)ViewData["Markers"])
            {
                <option value="@m.MarkerName"></option>
            }
        </datalist>
        <span asp-validation-for="MarkerId" class="text-danger"></span>
    </div>

    <!-- LayType dropdown -->
    <div class="form-group">
        <label for="LayType">Lay Type</label>
        <select id="LayType" name="LayType" class="form-control">
            <option value="">-- select Lay Type --</option>
            @foreach (var t in types)
            {
                if (t.LayTypeId == Model.LayType)
                {
                    <option value="@t.LayTypeId" selected="selected">@t.LayTYpeName</option>
                }
                else
                {
                    <option value="@t.LayTypeId">@t.LayTYpeName</option>
                }
            }
        </select>
        <span asp-validation-for="LayType" class="text-danger"></span>
    </div>

    <!-- LayTable dropdown -->
    <div class="form-group">
        <label for="LayTable">Lay Table</label>
        <select id="LayTable" name="LayTable" class="form-control">
            <option value="">-- select Lay Table --</option>
            @foreach (var lt in tables)
            {
                if (lt.LayTableId == Model.LayTable)
                {
                    <option value="@lt.LayTableId" selected="selected">@lt.LayTableName</option>
                }
                else
                {
                    <option value="@lt.LayTableId">@lt.LayTableName</option>
                }
            }
        </select>
        <span asp-validation-for="LayTable" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
    <a asp-action="Index" class="btn btn-link">Back</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
